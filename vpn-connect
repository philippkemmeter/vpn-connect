#!/bin/bash


[[ "$TRACE" ]] && set -x
set -u # exit on undeclared variablesk
set -o pipefail

declare -r WORKDIR="$(pwd -L)"
declare -r BASENAME=$(basename $0)
declare -r CONFFILE="$WORKDIR/connections.ini"
declare -r LIBDIR="$WORKDIR/lib"

pushd $LIBDIR > /dev/null
source ./help.sh
source ./config.sh
source ./tunnel.sh
popd > /dev/null

declare -A CONFIG=
declare -a CONFIGSECTIONS=
config::load CONFIGSECTIONS CONFIG $CONFFILE || exit 1
declare -r CONFIGSECTIONS CONFIG


function check_if_root_user_or_exit {
    if [[ $EUID -ne 0 ]]; then
       echo::error "This script must be run as root."
       exit 1
    fi
}

function check_destination_or_exit_with_help_screen {
    [[ $# -lt 1 ]] && help::show && exit 1
    local -r destination=$1
    local found=false

    for (( i=0; i<${#CONFIGSECTIONS[@]}; i++)); do
        [[ "${CONFIGSECTIONS[$i]}" == "$destination" ]] && found=true && break
    done

    $found || (help::show "Wrong value for DESTINATION: '$1'" && exit 1)
}

function main {
    local -r destination=$1
    local -A destination_config

    check_if_root_user_or_exit
    check_destination_or_exit_with_help_screen $destination

    config::extract_section destination_config CONFIG $destination
    tunnel::open destination_config
}

main $@
